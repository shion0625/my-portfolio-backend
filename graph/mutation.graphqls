### Mutation(更新系)の定義
type Mutation {
  updateUser(input: UpdateUserInput!): User! @auth
  deleteUser(id: ID!): Boolean @auth
  createWork(input: CreateWorkInput!): Work!  @auth
  updateWork(input: UpdateWorkInput!): Work! @auth
  deleteWork(id: ID!): Boolean @auth
  login(email: String!, password: String!): Any!
  register(input: CreateUserInput!): Any!
}

###インプット用のスキーマ定義
input CreateUserInput {
  name: String!
  password: String!
  email: String!
  is_admin: Boolean!
}

input UpdateUserInput {
  id: ID!
  is_admin: Boolean
  name: String
  email: String
}

input CreateWorkInput {
  title: String!
  summary: String
  image_url: String
  duration: String
  number_of_people: Int
  language: String
  role: String
  url: String
  brief_story: String
  user_id: String!
}

input UpdateWorkInput {
  id: ID!
  title: String
  summary: String
  image_url: String
  duration: String
  number_of_people: Int
  language: String
  role: String
  url: String
  brief_story: String
}

directive @hasRole(role: [Role!]!) on FIELD_DEFINITION

enum Role {
  ADMIN
  USER
  VIEWER
}
